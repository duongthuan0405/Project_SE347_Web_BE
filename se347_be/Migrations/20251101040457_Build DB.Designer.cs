// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using se347_be.Database;

#nullable disable

namespace se347_be.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20251101040457_Build DB")]
    partial class BuildDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("se347_be.Database.DbEntity.TestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.HasKey("Id");

                    b.ToTable("TestEntity");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entities.AnswerSelection", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParticipationId")
                        .HasColumnType("uuid");

                    b.HasKey("AnswerId", "ParticipationId");

                    b.HasIndex("ParticipationId");

                    b.ToTable("AnswerSelection");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entities.QuizParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("ParticipantId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ParticipationTime")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("QuizId")
                        .HasColumnType("uuid");

                    b.Property<string>("StudentId")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("SubmitTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizParticipation");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("QuizId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Quiz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DueTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShuffleAnswers")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShuffleQuestions")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxTimesCanAttempt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Avatar")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entities.AnswerSelection", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.Answer", "Answer")
                        .WithMany("AnswerSelections")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("se347_be.Work.Database.Entities.QuizParticipation", "QuizParticipation")
                        .WithMany("AnswerSelections")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("QuizParticipation");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entities.QuizParticipation", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.User", "ParticipantUser")
                        .WithMany("Participations")
                        .HasForeignKey("ParticipantId");

                    b.HasOne("se347_be.Work.Database.Entity.Quiz", "Quiz")
                        .WithMany("Participations")
                        .HasForeignKey("QuizId");

                    b.Navigation("ParticipantUser");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Answer", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Question", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Quiz", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.User", "CreatorUser")
                        .WithMany("QuizzesCreated")
                        .HasForeignKey("CreatorId");

                    b.Navigation("CreatorUser");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.UserProfile", b =>
                {
                    b.HasOne("se347_be.Work.Database.Entity.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("se347_be.Work.Database.Entity.UserProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entities.QuizParticipation", b =>
                {
                    b.Navigation("AnswerSelections");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Answer", b =>
                {
                    b.Navigation("AnswerSelections");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.Quiz", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("se347_be.Work.Database.Entity.User", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("QuizzesCreated");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
